{"version":3,"file":"src_core_pkg-webgl1_index_js.aladin.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAwC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAqD;AACrD;;AAExC,4BAA4B,WAAW,6DAA6D,WAAW;;AAE/G,oDAAoD,8BAA8B;;AAElF;;AAEA;AACA;AACA,yEAAyE,yDAAkB;AAC3F,8CAA8C,yDAAkB;AAChE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6EAA6E,yDAAkB;AAC/F,kDAAkD,yDAAkB;AACpE;AACA;AACA;;AAEA;AACA;AACA,yEAAyE,yDAAkB;AAC3F,8CAA8C,yDAAkB;AAChE;AACA;AACA;;AAEA;;AAEA,4BAA4B,WAAW,6DAA6D,WAAW;;AAE/G;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,WAAW,cAAc;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA;AACA,mBAAmB,IAAI;AACvB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;AACA;AACA,+BAA+B,KAAK;AACpC,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS,IAAI,YAAY,IAAI,UAAU;AACzD;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,gBAAgB,mEAA4B;;AAE5C,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,+CAA+C,UAAU,cAAc,QAAQ;AAC/E,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yKAAkI;AAC1I,MAAM;AACN;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,gBAAgB,mEAA4B;AAC5C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,mKAA4H;AAChI;;AAEA;AACA;AACA,uBAAuB,2EAAoC;AAC3D;AACA;AACA,QAAQ,sKAA+H;AACvI;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,QAAQ,2EAAoC;AAC5C;AACA;;AAEA;AACA;AACA;AACA,IAAI,wKAAiI;AACrI;;AAEA;AACA;AACA;AACA,IAAI,wKAAiI;AACrI;;AAEA;AACA;AACA;AACA,IAAI,wKAAiI;AACrI;;AAEA;AACA;AACA;AACA,IAAI,wKAAiI;AACrI;;AAEA;AACA;AACA;AACA,IAAI,wKAAiI;AACrI;;AAEA;AACA;AACA;AACA,IAAI,wKAAiI;AACrI;;AAEA;AACA;AACA;AACA,IAAI,wKAAiI;AACrI;;AAEA;AACA;AACA;AACA,IAAI,sKAA+H;AACnI;;AAEA;AACA;AACA;AACA,IAAI,wKAAiI;AACrI;;AAEA;AACA;AACA,2EAA2E,yDAAkB;AAC7F,gDAAgD,yDAAkB;AAClE;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACO;AACP;AACA,uBAAuB,2EAAoC;AAC3D,QAAQ,qDAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,QAAQ,2EAAoC;AAC5C;AACA;;AAEA;AACA,YAAY;AACZ;AACO;AACP;AACA,uBAAuB,2EAAoC;AAC3D,QAAQ,2DAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,QAAQ,2EAAoC;AAC5C;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN,QAAQ,gEAAyB;AACjC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6EAA6E,yDAAkB;AAC/F,kDAAkD,yDAAkB;AACpE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO,kCAAkC,8CAA8C;AACvF;AACA;AACO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ,gEAAyB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,KAAK;AACnB,cAAc,KAAK;AACnB;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D,0DAA0D,6DAAsB,EAAE,8DAAuB;AACzG;AACA,YAAY,yDAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA;AACA,YAAY,4DAAqB;AACjC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,4DAAqB;AACjC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA;AACA,YAAY,4DAAqB;AACjC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,qDAAqD,6DAAsB,EAAE,8DAAuB;AACpG;AACA,YAAY,mEAA4B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA;AACA,YAAY,0EAAmC;AAC/C;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,6DAAsB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iCAAiC;AACxD;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,wDAAwD,6DAAsB;AAC9E;AACA,YAAY,qEAA8B;AAC1C;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,qDAAqD,6DAAsB,EAAE,8DAAuB;AACpG;AACA,YAAY,kFAA2C;AACvD;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,qDAAqD,6DAAsB,EAAE,8DAAuB;AACpG;AACA,YAAY,qEAA8B;AAC1C;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,kEAA2B;AACvC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,gEAAyB;AACrC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,iEAA0B;AACtC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,oEAA6B;AACzC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,oEAA6B;AACzC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,+DAAwB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA;AACA,YAAY,kEAA2B;AACvC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,+DAAwB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2DAAoB;AACpC;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,+DAAwB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2DAAoB;AACpC;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,oEAA6B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,oEAA6B;AACzC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,6EAAsC;AAClD;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,6EAAsC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kBAAkB,uEAAgC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,uEAAgC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,+DAAwB;AACpC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,+DAAwB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2DAAoB;AAChC;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAoC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,oEAA6B;AACzC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,8DAAuB;AACnC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,mEAA4B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2DAAoB;AACpC;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,wDAAwD,6DAAsB;AAC9E;AACA,YAAY,sEAA+B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2DAAoB;AAChC;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,mEAA4B;AACxC;AACA;AACA;AACA;AACA;AACA,gBAAgB,2DAAoB;AACpC;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,4EAAqC;AACjD;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,0EAAmC;AAC/C;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,wEAAiC;AAC7C;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kBAAkB,6DAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,KAAK;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,uDAAuD,6DAAsB,EAAE,8DAAuB;AACtG;AACA,mDAAmD,6DAAsB,EAAE,8DAAuB;AAClG;AACA,YAAY,gEAAyB;AACrC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,qEAA8B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,uDAAuD,6DAAsB,EAAE,8DAAuB;AACtG;AACA,mDAAmD,6DAAsB,EAAE,8DAAuB;AAClG;AACA,YAAY,wEAAiC;AAC7C;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,uDAAuD,6DAAsB,EAAE,8DAAuB;AACtG;AACA,YAAY,uEAAgC;AAC5C;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,uDAAuD,6DAAsB,EAAE,8DAAuB;AACtG;AACA,YAAY,8EAAuC;AACnD;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,iEAA0B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2DAAoB;AAChC;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,8EAAuC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,YAAY,4DAAqB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,2EAAoC;AAC/D;AACA,mDAAmD,6DAAsB,EAAE,8DAAuB;AAClG;AACA,YAAY,+DAAwB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,2EAAoC;AAChD;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA,sCAAsC,6DAAsB,EAAE,8DAAuB;AACrF;AACA;AACA;AACA;;AAEO,wDAAwD;AAC/D;AACA,kBAAkB,0GAAmB;AACrC;AACA,MAAM;AACN,QAAQ,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","sources":["webpack://hips_webgl_renderer/./src/core/pkg-webgl1/index.js","webpack://hips_webgl_renderer/./src/core/pkg-webgl1/index_bg.js","webpack://hips_webgl_renderer/./src/core/pkg-webgl1/snippets/al-ui-d4d455bd9e91f451/js/hpxImageSurvey.js"],"sourcesContent":["import * as wasm from \"./index_bg.wasm\";\nexport * from \"./index_bg.js\";","import { fetchSurveyMetadata } from './snippets/al-ui-d4d455bd9e91f451/js/hpxImageSurvey.js';\nimport * as wasm from './index_bg.wasm';\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    if (typeof(heap_next) !== 'number') throw new Error('corrupt heap');\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nfunction _assertBoolean(n) {\n    if (typeof(n) !== 'boolean') {\n        throw new Error('expected a boolean argument');\n    }\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nfunction _assertNum(n) {\n    if (typeof(n) !== 'number') throw new Error('expected a number argument');\n}\n\nlet cachegetFloat64Memory0 = null;\nfunction getFloat64Memory0() {\n    if (cachegetFloat64Memory0 === null || cachegetFloat64Memory0.buffer !== wasm.memory.buffer) {\n        cachegetFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n    }\n    return cachegetFloat64Memory0;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (typeof(arg) !== 'string') throw new Error('expected a string argument');\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n        if (ret.read !== arg.length) throw new Error('failed to pass whole string');\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nfunction makeMutClosure(arg0, arg1, dtor, f) {\n    const state = { a: arg0, b: arg1, cnt: 1, dtor };\n    const real = (...args) => {\n        // First up with a closure we increment the internal reference\n        // count. This ensures that the Rust closure environment won't\n        // be deallocated while we're invoking it.\n        state.cnt++;\n        const a = state.a;\n        state.a = 0;\n        try {\n            return f(a, state.b, ...args);\n        } finally {\n            if (--state.cnt === 0) {\n                wasm.__wbindgen_export_2.get(state.dtor)(a, state.b);\n\n            } else {\n                state.a = a;\n            }\n        }\n    };\n    real.original = state;\n\n    return real;\n}\n\nfunction logError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        let error = (function () {\n            try {\n                return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n            } catch(_) {\n                return \"<failed to stringify thrown value>\";\n            }\n        }());\n        console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n        throw e;\n    }\n}\n\nlet stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\nfunction __wbg_adapter_26(arg0, arg1, arg2) {\n    try {\n        _assertNum(arg0);\n        _assertNum(arg1);\n        wasm._dyn_core__ops__function__FnMut___A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h2bda815aee23e04f(arg0, arg1, addBorrowedObject(arg2));\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\nfunction makeClosure(arg0, arg1, dtor, f) {\n    const state = { a: arg0, b: arg1, cnt: 1, dtor };\n    const real = (...args) => {\n        // First up with a closure we increment the internal reference\n        // count. This ensures that the Rust closure environment won't\n        // be deallocated while we're invoking it.\n        state.cnt++;\n        try {\n            return f(state.a, state.b, ...args);\n        } finally {\n            if (--state.cnt === 0) {\n                wasm.__wbindgen_export_2.get(state.dtor)(state.a, state.b);\n                state.a = 0;\n\n            }\n        }\n    };\n    real.original = state;\n\n    return real;\n}\nfunction __wbg_adapter_29(arg0, arg1) {\n    _assertNum(arg0);\n    _assertNum(arg1);\n    wasm._dyn_core__ops__function__Fn_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h2bc122081057ca5c(arg0, arg1);\n}\n\nfunction __wbg_adapter_32(arg0, arg1) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        _assertNum(arg0);\n        _assertNum(arg1);\n        wasm._dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hc7b86a4a9972026b(retptr, arg0, arg1);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        if (r1) {\n            throw takeObject(r0);\n        }\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\nfunction __wbg_adapter_35(arg0, arg1, arg2) {\n    _assertNum(arg0);\n    _assertNum(arg1);\n    wasm._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h036bd29ba9039c35(arg0, arg1, addHeapObject(arg2));\n}\n\nfunction __wbg_adapter_38(arg0, arg1, arg2) {\n    _assertNum(arg0);\n    _assertNum(arg1);\n    wasm._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h4a1efbed06081ce8(arg0, arg1, addHeapObject(arg2));\n}\n\nfunction __wbg_adapter_41(arg0, arg1, arg2) {\n    _assertNum(arg0);\n    _assertNum(arg1);\n    wasm._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h97b4cca87a4f442d(arg0, arg1, addHeapObject(arg2));\n}\n\nfunction __wbg_adapter_44(arg0, arg1, arg2) {\n    _assertNum(arg0);\n    _assertNum(arg1);\n    wasm._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h9948bd0462ccf34b(arg0, arg1, addHeapObject(arg2));\n}\n\nfunction __wbg_adapter_47(arg0, arg1, arg2) {\n    _assertNum(arg0);\n    _assertNum(arg1);\n    wasm._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h2c4060d5b89984c6(arg0, arg1, addHeapObject(arg2));\n}\n\nfunction __wbg_adapter_50(arg0, arg1, arg2) {\n    _assertNum(arg0);\n    _assertNum(arg1);\n    wasm._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hcd20bd4572ae6841(arg0, arg1, addHeapObject(arg2));\n}\n\nfunction __wbg_adapter_53(arg0, arg1, arg2) {\n    _assertNum(arg0);\n    _assertNum(arg1);\n    wasm._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h7069be39e0f7ccf8(arg0, arg1, addHeapObject(arg2));\n}\n\nfunction __wbg_adapter_56(arg0, arg1) {\n    _assertNum(arg0);\n    _assertNum(arg1);\n    wasm._dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h00c05509b8d9a6e1(arg0, arg1);\n}\n\nfunction __wbg_adapter_59(arg0, arg1, arg2) {\n    _assertNum(arg0);\n    _assertNum(arg1);\n    wasm._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h4266fc9359039d5a(arg0, arg1, addHeapObject(arg2));\n}\n\nlet cachegetUint32Memory0 = null;\nfunction getUint32Memory0() {\n    if (cachegetUint32Memory0 === null || cachegetUint32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory0;\n}\n\nfunction passArrayJsValueToWasm0(array, malloc) {\n    const ptr = malloc(array.length * 4);\n    const mem = getUint32Memory0();\n    for (let i = 0; i < array.length; i++) {\n        mem[ptr / 4 + i] = addHeapObject(array[i]);\n    }\n    WASM_VECTOR_LEN = array.length;\n    return ptr;\n}\n\nfunction getArrayF64FromWasm0(ptr, len) {\n    return getFloat64Memory0().subarray(ptr / 8, ptr / 8 + len);\n}\n/**\n* @returns {number}\n*/\nexport function GALCooSys() {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.GALCooSys(retptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return r0 >>> 0;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @returns {number}\n*/\nexport function ICRSJ2000CooSys() {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.ICRSJ2000CooSys(retptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return r0 >>> 0;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nlet cachegetFloat32Memory0 = null;\nfunction getFloat32Memory0() {\n    if (cachegetFloat32Memory0 === null || cachegetFloat32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetFloat32Memory0 = new Float32Array(wasm.memory.buffer);\n    }\n    return cachegetFloat32Memory0;\n}\n\nfunction getArrayF32FromWasm0(ptr, len) {\n    return getFloat32Memory0().subarray(ptr / 4, ptr / 4 + len);\n}\n/**\n*/\nexport const CooSystem = Object.freeze({ ICRSJ2000:0,\"0\":\"ICRSJ2000\",GAL:1,\"1\":\"GAL\", });\n/**\n*/\nexport class WebClient {\n\n    static __wrap(ptr) {\n        const obj = Object.create(WebClient.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_webclient_free(ptr);\n    }\n    /**\n    * Create the Aladin Lite webgl backend\n    *\n    * # Arguments\n    *\n    * * `aladin_div_name` - The name of the div where aladin is created\n    * * `shaders` - The list of shader objects containing the GLSL code source\n    * * `resources` - Image resource files\n    * @param {string} aladin_div_name\n    * @param {any} shaders\n    * @param {any} resources\n    */\n    constructor(aladin_div_name, shaders, resources) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            var ptr0 = passStringToWasm0(aladin_div_name, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.webclient_new(retptr, ptr0, len0, addBorrowedObject(shaders), addBorrowedObject(resources));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return WebClient.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            heap[stack_pointer++] = undefined;\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * Update the view\n    *\n    * # Arguments\n    *\n    * * `dt` - The time elapsed from the last frame update\n    * * `force` - This parameter ensures to force the update of some elements\n    *   even if the camera has not moved\n    * @param {number} dt\n    * @param {boolean} force\n    */\n    update(dt, force) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            _assertBoolean(force);\n            wasm.webclient_update(retptr, this.ptr, dt, force);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Resize the window\n    *\n    * # Arguments\n    *\n    * * `width` - The width in pixels of the view\n    * * `height` - The height in pixels of the view\n    * @param {number} width\n    * @param {number} height\n    */\n    resize(width, height) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_resize(retptr, this.ptr, width, height);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Render the frame to the canvas\n    *\n    * The rendering does not redraw the scene if nothing has changed\n    *\n    * # Arguments\n    *\n    * * `force` - Force the rendering of the frame\n    * @param {boolean} force\n    */\n    render(force) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            _assertBoolean(force);\n            wasm.webclient_render(retptr, this.ptr, force);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Set the type of projections\n    *\n    * # Arguments\n    *\n    * * `name` - Can be aitoff, mollweide, arc, sinus, tan or mercator\n    * @param {string} projection\n    * @returns {WebClient}\n    */\n    setProjection(projection) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const ptr = this.__destroy_into_raw();\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(ptr);\n            var ptr0 = passStringToWasm0(projection, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.webclient_setProjection(retptr, ptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return WebClient.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Reverse the longitude axis\n    *\n    * # Arguments\n    *\n    * * `reversed` - set it to `false` for planetary surveys, `true` for spatial ones\n    * @param {boolean} reversed\n    */\n    setLongitudeReversed(reversed) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            _assertBoolean(reversed);\n            wasm.webclient_setLongitudeReversed(retptr, this.ptr, reversed);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Check whether the app is ready\n    *\n    * Aladin Lite is in a good state when the root tiles of the\n    * HiPS chosen have all been retrieved and accessible for the GPU\n    *\n    * Surveys can be changed only if Aladin Lite is ready\n    * @returns {boolean}\n    */\n    isReady() {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_isReady(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return r0 !== 0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Set new image surveys\n    *\n    * Send the image surveys to render inside the Aladin Lite view\n    *\n    * # Arguments\n    *\n    * * `surveys` - A list/array of survey. A survey is a javascript object\n    * having the specific form. Please check the file in core/src/hips.rs to see\n    * the different semantics accepted.\n    *\n    * # Examples\n    *\n    * ```javascript\n    * let al = new Aladin.wasmLibs.webgl.WebClient(...);\n    * const panstarrs = {\n    *     properties: {\n    *         url: \"http://alasky.u-strasbg.fr/Pan-STARRS/DR1/r\",\n    *\n    *         maxOrder: 11,\n    *         frame: { label: \"J2000\", system: \"J2000\" },\n    *         tileSize: 512,\n    *         format: {\n    *             FITSImage: {\n    *                 bitpix: 16,\n    *             }\n    *         },\n    *         minCutout: -0.15,\n    *         maxCutout: 5,\n    *     },\n    *     color: {\n    *         Grayscale2Colormap: {\n    *             colormap: \"RedTemperature\",\n    *             transfer: \"asinh\",\n    *             reversed: false,\n    *         }\n    *     },\n    * };\n    * al.setImageSurveys([panstarrs]);\n    * ```\n    *\n    * # Panics\n    *\n    * * If the surveys do not match SimpleHiPS type\n    * * If the number of surveys is greater than 4. For the moment, due to the limitations\n    *   of WebGL2 texture units on some architectures, the total number of surveys rendered is\n    *   limited to 4.\n    * @param {any[]} surveys\n    */\n    setImageSurveys(surveys) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            var ptr0 = passArrayJsValueToWasm0(surveys, wasm.__wbindgen_malloc);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.webclient_setImageSurveys(retptr, this.ptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Move a layer forward the other ones\n    *\n    * # Arguments\n    *\n    * * `layer_name` - The name of the layer to move\n    *\n    * # Panics\n    *\n    * * If the layer specified is not found\n    * @param {string} survey_url\n    */\n    moveImageSurveysLayerForward(survey_url) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            var ptr0 = passStringToWasm0(survey_url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.webclient_moveImageSurveysLayerForward(retptr, this.ptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Set the opacity of a layer\n    *\n    * # Arguments\n    *\n    * * `opacity` - Set an opacity value (between 0.0 and 1.0)\n    * * `layer_name` - The name of the layer to move\n    *\n    * # Panics\n    *\n    * * If the layer specified is not found\n    * @param {number} opacity\n    * @param {string} survey_url\n    */\n    setOpacityLayer(opacity, survey_url) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            var ptr0 = passStringToWasm0(survey_url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.webclient_setOpacityLayer(retptr, this.ptr, opacity, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Set the equatorial grid color\n    *\n    * # Arguments\n    *\n    * * `red` - Red amount (between 0.0 and 1.0)\n    * * `green` - Green amount (between 0.0 and 1.0)\n    * * `blue` - Blue amount (between 0.0 and 1.0)\n    * * `alpha` - Alpha amount (between 0.0 and 1.0)\n    * @param {number} red\n    * @param {number} green\n    * @param {number} blue\n    * @param {number} alpha\n    */\n    setGridColor(red, green, blue, alpha) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_setGridColor(retptr, this.ptr, red, green, blue, alpha);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Enable the rendering of the equatorial grid\n    */\n    enableGrid() {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_enableGrid(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Disable the rendering of the equatorial grid\n    */\n    disableGrid() {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_disableGrid(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Enable the rendering of the equatorial grid labels\n    */\n    hideGridLabels() {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_hideGridLabels(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Disable the rendering of the equatorial grid labels\n    */\n    showGridLabels() {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_showGridLabels(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Get the coordinate system of the view\n    *\n    * Returns either ICRSJ2000 or GAL\n    * @returns {number}\n    */\n    cooSystem() {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_cooSystem(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return r0 >>> 0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Set the coordinate system for the view\n    *\n    * # Arguments\n    *\n    * * `coo_system` - The coordinate system\n    * @param {number} coo_system\n    */\n    setCooSystem(coo_system) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            _assertNum(coo_system);\n            wasm.webclient_setCooSystem(retptr, this.ptr, coo_system);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Convert a j2000 lonlat to a galactic one\n    *\n    * # Arguments\n    *\n    * * `lon` - A longitude in degrees\n    * * `lat` - A latitude in degrees\n    * @param {number} lon\n    * @param {number} lat\n    * @returns {Float64Array | undefined}\n    */\n    J20002Gal(lon, lat) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_J20002Gal(retptr, this.ptr, lon, lat);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            if (r3) {\n                throw takeObject(r2);\n            }\n            let v0;\n            if (r0 !== 0) {\n                v0 = getArrayF64FromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 8);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Convert a galactic lonlat to a j2000 one\n    *\n    * # Arguments\n    *\n    * * `lon` - A longitude in degrees\n    * * `lat` - A latitude in degrees\n    * @param {number} lon\n    * @param {number} lat\n    * @returns {Float64Array | undefined}\n    */\n    Gal2J2000(lon, lat) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_Gal2J2000(retptr, this.ptr, lon, lat);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            if (r3) {\n                throw takeObject(r2);\n            }\n            let v0;\n            if (r0 !== 0) {\n                v0 = getArrayF64FromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 8);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Get the field of the view in degrees\n    * @returns {number}\n    */\n    getFieldOfView() {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_getFieldOfView(retptr, this.ptr);\n            var r0 = getFloat64Memory0()[retptr / 8 + 0];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            if (r3) {\n                throw takeObject(r2);\n            }\n            return r0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Set the field of view\n    *\n    * # Arguments\n    *\n    * * `fov` - The field of view in degrees\n    * @param {number} fov\n    */\n    setFieldOfView(fov) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_setFieldOfView(retptr, this.ptr, fov);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Set the absolute orientation of the view\n    *\n    * # Arguments\n    *\n    * * `theta` - The rotation angle in degrees\n    * @param {number} theta\n    */\n    setRotationAroundCenter(theta) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_setRotationAroundCenter(retptr, this.ptr, theta);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Get the absolute orientation angle of the view\n    * @returns {number}\n    */\n    getRotationAroundCenter() {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_getRotationAroundCenter(retptr, this.ptr);\n            var r0 = getFloat64Memory0()[retptr / 8 + 0];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            if (r3) {\n                throw takeObject(r2);\n            }\n            return r0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Get the field of view angle value when the view is zoomed out to its maximum\n    *\n    * This method is dependent of the projection currently set.\n    * All sky projections should return 360 degrees whereas\n    * the sinus would be 180 degrees.\n    * @returns {number}\n    */\n    getMaxFieldOfView() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        var ret = wasm.webclient_getMaxFieldOfView(this.ptr);\n        return ret;\n    }\n    /**\n    * Get the clip zoom factor of the view\n    *\n    * This factor is deduced from the field of view angle.\n    * It is a constant which when multiplied to the screen coordinates\n    * gives the coordinates in clipping space.\n    * @returns {number}\n    */\n    getClipZoomFactor() {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_getClipZoomFactor(retptr, this.ptr);\n            var r0 = getFloat64Memory0()[retptr / 8 + 0];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            if (r3) {\n                throw takeObject(r2);\n            }\n            return r0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Set the center of the view\n    *\n    * The core works in ICRS system so\n    * the location must be given in this system\n    *\n    * # Arguments\n    *\n    * * `lon` - A longitude in degrees\n    * * `lat` - A latitude in degrees\n    * @param {number} lon\n    * @param {number} lat\n    */\n    setCenter(lon, lat) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_setCenter(retptr, this.ptr, lon, lat);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Get the center of the view\n    *\n    * This returns a javascript array of size 2.\n    * The first component is the longitude, the second one is the latitude.\n    * The angles are given in degrees.\n    * @returns {Float64Array}\n    */\n    getCenter() {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_getCenter(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            if (r3) {\n                throw takeObject(r2);\n            }\n            var v0 = getArrayF64FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 8);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Rest the north pole orientation to the top of the screen\n    */\n    resetNorthOrientation() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        wasm.webclient_resetNorthOrientation(this.ptr);\n    }\n    /**\n    * Move to a location\n    *\n    * The core works in ICRS system so\n    * the location must be given in this system\n    *\n    * # Arguments\n    *\n    * * `lon` - A longitude in degrees\n    * * `lat` - A latitude in degrees\n    * @param {number} lon\n    * @param {number} lat\n    */\n    moveToLocation(lon, lat) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_moveToLocation(retptr, this.ptr, lon, lat);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Go from a location to another one\n    *\n    * # Arguments\n    *\n    * * `s1x` - The x screen coordinate in pixels of the starting point\n    * * `s1y` - The y screen coordinate in pixels of the starting point\n    * * `s2x` - The x screen coordinate in pixels of the goal point\n    * * `s2y` - The y screen coordinate in pixels of the goal point\n    * @param {number} s1x\n    * @param {number} s1y\n    * @param {number} s2x\n    * @param {number} s2y\n    */\n    goFromTo(s1x, s1y, s2x, s2y) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_goFromTo(retptr, this.ptr, s1x, s1y, s2x, s2y);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * World to screen projection\n    *\n    * Coordinates must be given in the ICRS coo system\n    *\n    * # Arguments\n    *\n    * * `lon` - A longitude in degrees\n    * * `lat` - A latitude in degrees\n    * @param {number} lon\n    * @param {number} lat\n    * @returns {Float64Array | undefined}\n    */\n    worldToScreen(lon, lat) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_worldToScreen(retptr, this.ptr, lon, lat);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            if (r3) {\n                throw takeObject(r2);\n            }\n            let v0;\n            if (r0 !== 0) {\n                v0 = getArrayF64FromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 8);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * World to screen projection of a list of sources\n    *\n    * Coordinates must be given in the ICRS coo system\n    *\n    * # Arguments\n    *\n    * * `sources` - An array of sources\n    * @param {any[]} sources\n    * @returns {Float64Array}\n    */\n    worldToScreenVec(sources) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            var ptr0 = passArrayJsValueToWasm0(sources, wasm.__wbindgen_malloc);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.webclient_worldToScreenVec(retptr, this.ptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            if (r3) {\n                throw takeObject(r2);\n            }\n            var v1 = getArrayF64FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 8);\n            return v1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Screen to world unprojection\n    *\n    * # Arguments\n    *\n    * * `pos_x` - The x screen coordinate in pixels\n    * * `pos_y` - The y screen coordinate in pixels\n    * @param {number} pos_x\n    * @param {number} pos_y\n    * @returns {Float64Array | undefined}\n    */\n    screenToWorld(pos_x, pos_y) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_screenToWorld(retptr, this.ptr, pos_x, pos_y);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getArrayF64FromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 8);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Signal the backend when the left mouse button has been released.\n    *\n    * This is useful for beginning inerting.\n    * @param {number} sx\n    * @param {number} sy\n    */\n    releaseLeftButtonMouse(sx, sy) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_releaseLeftButtonMouse(retptr, this.ptr, sx, sy);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Signal the backend when the left mouse button has been pressed.\n    * @param {number} sx\n    * @param {number} sy\n    */\n    pressLeftMouseButton(sx, sy) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_pressLeftMouseButton(retptr, this.ptr, sx, sy);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Signal the backend when a wheel event has been registered\n    *\n    * The field of view is changed accordingly\n    *\n    * # Arguments\n    *\n    * * `delta` - The delta coming from the wheel event. This is\n    *   used to know if we are zooming or not.\n    * @param {number} delta\n    */\n    registerWheelEvent(delta) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_registerWheelEvent(retptr, this.ptr, delta);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Signal the backend when a wheel event has been registered\n    *\n    * The field of view is changed accordingly\n    *\n    * # Arguments\n    *\n    * * `delta` - The delta coming from the wheel event. This is\n    *   used to know if we are zooming or not.\n    * @returns {boolean}\n    */\n    posOnUi() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        var ret = wasm.webclient_posOnUi(this.ptr);\n        return ret !== 0;\n    }\n    /**\n    * Add a catalog rendered as a heatmap.\n    *\n    * # Arguments\n    *\n    * * `name_catalog` - The name of the catalog\n    * * `data` - The list of the catalog sources.\n    * * `colormap` - The name of the colormap. Check out the list of possible colormaps names `getAvailableColormapList`.\n    * @param {string} name_catalog\n    * @param {any} data\n    * @param {string} colormap\n    */\n    addCatalog(name_catalog, data, colormap) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            var ptr0 = passStringToWasm0(name_catalog, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len0 = WASM_VECTOR_LEN;\n            var ptr1 = passStringToWasm0(colormap, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len1 = WASM_VECTOR_LEN;\n            wasm.webclient_addCatalog(retptr, this.ptr, ptr0, len0, addHeapObject(data), ptr1, len1);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Set the catalog heatmap colormap\n    *\n    * # Arguments\n    *\n    * * `name_catalog` - The name of the catalog to apply this change to\n    * * `colormap` - The name of the colormap. Check out the list of possible colormaps names `getAvailableColormapList`.\n    *\n    * # Panics\n    *\n    * If the catalog has not been found\n    * @returns {boolean}\n    */\n    isCatalogLoaded() {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_isCatalogLoaded(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return r0 !== 0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Set the catalog heatmap colormap\n    *\n    * # Arguments\n    *\n    * * `name_catalog` - The name of the catalog to apply this change to\n    * * `colormap` - The name of the colormap. Check out the list of possible colormaps names `getAvailableColormapList`.\n    *\n    * # Panics\n    *\n    * If the catalog has not been found\n    * @param {string} name_catalog\n    * @param {string} colormap\n    */\n    setCatalogColormap(name_catalog, colormap) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            var ptr0 = passStringToWasm0(name_catalog, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len0 = WASM_VECTOR_LEN;\n            var ptr1 = passStringToWasm0(colormap, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len1 = WASM_VECTOR_LEN;\n            wasm.webclient_setCatalogColormap(retptr, this.ptr, ptr0, len0, ptr1, len1);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Set the catalog heatmap opacity\n    *\n    * # Arguments\n    *\n    * * `name_catalog` - The name of the catalog to apply this change to\n    * * `opacity` - The opacity factor (between 0.0 and 1.0)\n    *\n    * # Panics\n    *\n    * If the catalog has not been found\n    * @param {string} name_catalog\n    * @param {number} opacity\n    */\n    setCatalogOpacity(name_catalog, opacity) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            var ptr0 = passStringToWasm0(name_catalog, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.webclient_setCatalogOpacity(retptr, this.ptr, ptr0, len0, opacity);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Set the kernel strength for the catalog heatmap rendering\n    *\n    * # Arguments\n    *\n    * * `name_catalog` - The name of the catalog to apply this change to\n    * * `strength` - The strength of the kernel\n    *\n    * # Panics\n    *\n    * If the catalog has not been found\n    * @param {string} name_catalog\n    * @param {number} strength\n    */\n    setCatalogKernelStrength(name_catalog, strength) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            var ptr0 = passStringToWasm0(name_catalog, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.webclient_setCatalogKernelStrength(retptr, this.ptr, ptr0, len0, strength);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Project a line to the screen\n    *\n    * # Returns\n    *\n    * A list of xy screen coordinates defining the projected line.\n    * The algorithm involved is recursive and can return different number of\n    * control points depending on the projection used and therefore\n    * the deformation of the line.\n    *\n    * # Arguments\n    *\n    * * `lon1` - The longitude in degrees of the starting line point\n    * * `lat1` - The latitude in degrees of the starting line point\n    * * `lon2` - The longitude in degrees of the ending line point\n    * * `lat2` - The latitude in degrees of the ending line point\n    * @param {number} lon1\n    * @param {number} lat1\n    * @param {number} lon2\n    * @param {number} lat2\n    * @returns {Float64Array}\n    */\n    projectLine(lon1, lat1, lon2, lat2) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_projectLine(retptr, this.ptr, lon1, lat1, lon2, lat2);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            if (r3) {\n                throw takeObject(r2);\n            }\n            var v0 = getArrayF64FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 8);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Get the list of colormap supported\n    *\n    * This list must be updated whenever a new colormap is added\n    * in core/img/colormaps/colormaps.png\n    * @returns {any}\n    */\n    getAvailableColormapList() {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_getAvailableColormapList(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Get the image canvas where the webgl rendering is done\n    * @returns {object | undefined}\n    */\n    canvas() {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.webclient_canvas(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Read the pixel value\n    *\n    * The current implementation only returns the pixel value\n    * of the first survey of the `layer` specified.\n    *\n    * # Returns\n    *\n    * - An array of 3 items (rgb) for JPG tiles\n    * - An array of 4 items (rgba) for PNG tiles\n    * - A single value for FITS tiles\n    *\n    * # Arguments\n    *\n    * * `x` - The x screen coordinate in pixels\n    * * `y` - The y screen coordinate in pixels\n    * * `base_url` - The base url of the survey identifying it\n    * @param {number} x\n    * @param {number} y\n    * @param {string} base_url\n    * @returns {any}\n    */\n    readPixel(x, y, base_url) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            var ptr0 = passStringToWasm0(base_url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.webclient_readPixel(retptr, this.ptr, x, y, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n\nexport function __wbindgen_string_new(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n};\n\nexport function __wbindgen_object_clone_ref(arg0) {\n    var ret = getObject(arg0);\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_cb_drop(arg0) {\n    const obj = takeObject(arg0).original;\n    if (obj.cnt-- == 1) {\n        obj.a = 0;\n        return true;\n    }\n    var ret = false;\n    _assertBoolean(ret);\n    return ret;\n};\n\nexport function __wbindgen_number_get(arg0, arg1) {\n    const obj = getObject(arg1);\n    var ret = typeof(obj) === 'number' ? obj : undefined;\n    if (!isLikeNone(ret)) {\n        _assertNum(ret);\n    }\n    getFloat64Memory0()[arg0 / 8 + 1] = isLikeNone(ret) ? 0 : ret;\n    getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);\n};\n\nexport function __wbindgen_json_parse(arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_json_serialize(arg0, arg1) {\n    const obj = getObject(arg1);\n    var ret = JSON.stringify(obj === undefined ? null : obj);\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport function __wbg_fetchSurveyMetadata_3d518f6be78ba7d4() { return handleError(function (arg0, arg1) {\n    try {\n        var ret = fetchSurveyMetadata(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n}, arguments) };\n\nexport function __wbindgen_boolean_get(arg0) {\n    const v = getObject(arg0);\n    var ret = typeof(v) === 'boolean' ? (v ? 1 : 0) : 2;\n    _assertNum(ret);\n    return ret;\n};\n\nexport function __wbg_log_a39f164b49616cb0() { return logError(function (arg0, arg1) {\n    console.log(getStringFromWasm0(arg0, arg1));\n}, arguments) };\n\nexport function __wbg_instanceof_HtmlCanvasElement_a6157e470d06b638() { return logError(function (arg0) {\n    var ret = getObject(arg0) instanceof HTMLCanvasElement;\n    _assertBoolean(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_width_cfa982e2a6ad6297() { return logError(function (arg0) {\n    var ret = getObject(arg0).width;\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_setwidth_362e8db8cbadbe96() { return logError(function (arg0, arg1) {\n    getObject(arg0).width = arg1 >>> 0;\n}, arguments) };\n\nexport function __wbg_height_1b399500ca683487() { return logError(function (arg0) {\n    var ret = getObject(arg0).height;\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_setheight_28f53831182cc410() { return logError(function (arg0, arg1) {\n    getObject(arg0).height = arg1 >>> 0;\n}, arguments) };\n\nexport function __wbg_getContext_10d5c2a4cc0737c8() { return handleError(function (arg0, arg1, arg2, arg3) {\n    var ret = getObject(arg0).getContext(getStringFromWasm0(arg1, arg2), getObject(arg3));\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_touches_7397ce4df4dceded() { return logError(function (arg0) {\n    var ret = getObject(arg0).touches;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_changedTouches_363278e8a9a95419() { return logError(function (arg0) {\n    var ret = getObject(arg0).changedTouches;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_type_e32f387f5584c765() { return logError(function (arg0, arg1) {\n    var ret = getObject(arg1).type;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n}, arguments) };\n\nexport function __wbg_preventDefault_fa00541ff125b78c() { return logError(function (arg0) {\n    getObject(arg0).preventDefault();\n}, arguments) };\n\nexport function __wbg_stopPropagation_da586180676fa914() { return logError(function (arg0) {\n    getObject(arg0).stopPropagation();\n}, arguments) };\n\nexport function __wbg_keyCode_8a05b1390fced3c8() { return logError(function (arg0) {\n    var ret = getObject(arg0).keyCode;\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_altKey_773e7f8151c49bb1() { return logError(function (arg0) {\n    var ret = getObject(arg0).altKey;\n    _assertBoolean(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_ctrlKey_8c7ff99be598479e() { return logError(function (arg0) {\n    var ret = getObject(arg0).ctrlKey;\n    _assertBoolean(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_shiftKey_894b631364d8db13() { return logError(function (arg0) {\n    var ret = getObject(arg0).shiftKey;\n    _assertBoolean(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_metaKey_99a7d3732e1b7856() { return logError(function (arg0) {\n    var ret = getObject(arg0).metaKey;\n    _assertBoolean(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_isComposing_b892666abf384da9() { return logError(function (arg0) {\n    var ret = getObject(arg0).isComposing;\n    _assertBoolean(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_key_7f10b1291a923361() { return logError(function (arg0, arg1) {\n    var ret = getObject(arg1).key;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n}, arguments) };\n\nexport function __wbg_setsrc_b0a1ac4dd261ae2d() { return logError(function (arg0, arg1, arg2) {\n    getObject(arg0).src = getStringFromWasm0(arg1, arg2);\n}, arguments) };\n\nexport function __wbg_setcrossOrigin_07e0e4935571a4c5() { return logError(function (arg0, arg1, arg2) {\n    getObject(arg0).crossOrigin = arg1 === 0 ? undefined : getStringFromWasm0(arg1, arg2);\n}, arguments) };\n\nexport function __wbg_width_6c4cad65073b3852() { return logError(function (arg0) {\n    var ret = getObject(arg0).width;\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_height_133772b066cfc559() { return logError(function (arg0) {\n    var ret = getObject(arg0).height;\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_new_da67f111e299956e() { return handleError(function () {\n    var ret = new Image();\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_type_8bc3e57acd2158c9() { return logError(function (arg0, arg1) {\n    var ret = getObject(arg1).type;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n}, arguments) };\n\nexport function __wbg_userAgent_3f63af8b4fe2331c() { return handleError(function (arg0, arg1) {\n    var ret = getObject(arg1).userAgent;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n}, arguments) };\n\nexport function __wbg_name_9a61dbbdbfb2d0de() { return logError(function (arg0, arg1) {\n    var ret = getObject(arg1).name;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n}, arguments) };\n\nexport function __wbg_lastModified_0de23a8c5214f2fb() { return logError(function (arg0) {\n    var ret = getObject(arg0).lastModified;\n    return ret;\n}, arguments) };\n\nexport function __wbg_name_4ada8b70ffadb5c0() { return logError(function (arg0, arg1) {\n    var ret = getObject(arg1).name;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n}, arguments) };\n\nexport function __wbg_error_ca520cb687b085a1() { return logError(function (arg0) {\n    console.error(getObject(arg0));\n}, arguments) };\n\nexport function __wbg_log_fbd13631356d44e4() { return logError(function (arg0) {\n    console.log(getObject(arg0));\n}, arguments) };\n\nexport function __wbg_warn_97f10a6b0dbb8c5c() { return logError(function (arg0) {\n    console.warn(getObject(arg0));\n}, arguments) };\n\nexport function __wbg_deltaX_df228181f4d1a561() { return logError(function (arg0) {\n    var ret = getObject(arg0).deltaX;\n    return ret;\n}, arguments) };\n\nexport function __wbg_deltaY_afa6edde136e1500() { return logError(function (arg0) {\n    var ret = getObject(arg0).deltaY;\n    return ret;\n}, arguments) };\n\nexport function __wbg_deltaMode_ed9d7974a0c11323() { return logError(function (arg0) {\n    var ret = getObject(arg0).deltaMode;\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_setonerror_d665b35adb3552fb() { return logError(function (arg0, arg1) {\n    getObject(arg0).onerror = getObject(arg1);\n}, arguments) };\n\nexport function __wbg_setonload_18033df8ec5db791() { return logError(function (arg0, arg1) {\n    getObject(arg0).onload = getObject(arg1);\n}, arguments) };\n\nexport function __wbg_addEventListener_6bdba88519fdc1c9() { return handleError(function (arg0, arg1, arg2, arg3) {\n    getObject(arg0).addEventListener(getStringFromWasm0(arg1, arg2), getObject(arg3));\n}, arguments) };\n\nexport function __wbg_size_20c167ba9040b895() { return logError(function (arg0) {\n    var ret = getObject(arg0).size;\n    return ret;\n}, arguments) };\n\nexport function __wbg_arrayBuffer_8b5364ee9b393098() { return logError(function (arg0) {\n    var ret = getObject(arg0).arrayBuffer();\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_items_d571f433ef73ee49() { return logError(function (arg0) {\n    var ret = getObject(arg0).items;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_files_a4192b4f5967317b() { return logError(function (arg0) {\n    var ret = getObject(arg0).files;\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_body_7538539844356c1c() { return logError(function (arg0) {\n    var ret = getObject(arg0).body;\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_createElement_d017b8d2af99bab9() { return handleError(function (arg0, arg1, arg2) {\n    var ret = getObject(arg0).createElement(getStringFromWasm0(arg1, arg2));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_getElementById_b30e88aff96f66a1() { return logError(function (arg0, arg1, arg2) {\n    var ret = getObject(arg0).getElementById(getStringFromWasm0(arg1, arg2));\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_data_9562112603a9aa89() { return logError(function (arg0, arg1) {\n    var ret = getObject(arg1).data;\n    var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n}, arguments) };\n\nexport function __wbg_instanceof_HtmlInputElement_8969541a2a0bded0() { return logError(function (arg0) {\n    var ret = getObject(arg0) instanceof HTMLInputElement;\n    _assertBoolean(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_setautofocus_a2ae37091dfbe4af() { return logError(function (arg0, arg1) {\n    getObject(arg0).autofocus = arg1 !== 0;\n}, arguments) };\n\nexport function __wbg_setsize_90d1034a7a757a50() { return logError(function (arg0, arg1) {\n    getObject(arg0).size = arg1 >>> 0;\n}, arguments) };\n\nexport function __wbg_value_fc1c354d1a0e9714() { return logError(function (arg0, arg1) {\n    var ret = getObject(arg1).value;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n}, arguments) };\n\nexport function __wbg_setvalue_ce4a23f487065c07() { return logError(function (arg0, arg1, arg2) {\n    getObject(arg0).value = getStringFromWasm0(arg1, arg2);\n}, arguments) };\n\nexport function __wbg_now_5fa0ca001e042f8a() { return logError(function (arg0) {\n    var ret = getObject(arg0).now();\n    return ret;\n}, arguments) };\n\nexport function __wbg_appendChild_3fe5090c665d3bb4() { return handleError(function (arg0, arg1) {\n    var ret = getObject(arg0).appendChild(getObject(arg1));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_top_a24b8b81afea659b() { return logError(function (arg0) {\n    var ret = getObject(arg0).top;\n    return ret;\n}, arguments) };\n\nexport function __wbg_left_0e681cb8fd277739() { return logError(function (arg0) {\n    var ret = getObject(arg0).left;\n    return ret;\n}, arguments) };\n\nexport function __wbg_identifier_afa8b01d4d901685() { return logError(function (arg0) {\n    var ret = getObject(arg0).identifier;\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_pageX_e0c8221ecfdb73d0() { return logError(function (arg0) {\n    var ret = getObject(arg0).pageX;\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_pageY_32100ad7039a744e() { return logError(function (arg0) {\n    var ret = getObject(arg0).pageY;\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_force_8e51e1fec066aade() { return logError(function (arg0) {\n    var ret = getObject(arg0).force;\n    return ret;\n}, arguments) };\n\nexport function __wbg_getPropertyValue_fd6ae3726bda9d7f() { return handleError(function (arg0, arg1, arg2, arg3) {\n    var ret = getObject(arg1).getPropertyValue(getStringFromWasm0(arg2, arg3));\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n}, arguments) };\n\nexport function __wbg_setProperty_ebb06e7fa941d6a8() { return handleError(function (arg0, arg1, arg2, arg3, arg4) {\n    getObject(arg0).setProperty(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));\n}, arguments) };\n\nexport function __wbg_getwithindex_5caaba1b5b3e6e18() { return logError(function (arg0, arg1) {\n    var ret = getObject(arg0)[arg1 >>> 0];\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_instanceof_Window_434ce1849eb4e0fc() { return logError(function (arg0) {\n    var ret = getObject(arg0) instanceof Window;\n    _assertBoolean(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_document_5edd43643d1060d9() { return logError(function (arg0) {\n    var ret = getObject(arg0).document;\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_navigator_0e0588c949560476() { return logError(function (arg0) {\n    var ret = getObject(arg0).navigator;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_innerWidth_405786923c1d2641() { return handleError(function (arg0) {\n    var ret = getObject(arg0).innerWidth;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_innerHeight_25d3be0d129329c3() { return handleError(function (arg0) {\n    var ret = getObject(arg0).innerHeight;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_devicePixelRatio_9632545370d525ae() { return logError(function (arg0) {\n    var ret = getObject(arg0).devicePixelRatio;\n    return ret;\n}, arguments) };\n\nexport function __wbg_performance_bbca4ccfaef860b2() { return logError(function (arg0) {\n    var ret = getObject(arg0).performance;\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_open_67fbcd7373a90ddc() { return handleError(function (arg0, arg1, arg2, arg3, arg4) {\n    var ret = getObject(arg0).open(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_requestAnimationFrame_0c71cd3c6779a371() { return handleError(function (arg0, arg1) {\n    var ret = getObject(arg0).requestAnimationFrame(getObject(arg1));\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_setTimeout_1c75092906446b91() { return handleError(function (arg0, arg1, arg2) {\n    var ret = getObject(arg0).setTimeout(getObject(arg1), arg2);\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_length_01a613025b5ffd74() { return logError(function (arg0) {\n    var ret = getObject(arg0).length;\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_item_b192ab411bbfbb09() { return logError(function (arg0, arg1) {\n    var ret = getObject(arg0).item(arg1 >>> 0);\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_get_a765dab923455e0d() { return logError(function (arg0, arg1) {\n    var ret = getObject(arg0)[arg1 >>> 0];\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_length_a2882c668bdf6488() { return logError(function (arg0) {\n    var ret = getObject(arg0).length;\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_get_1c01a7682a9775bb() { return logError(function (arg0, arg1) {\n    var ret = getObject(arg0)[arg1 >>> 0];\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_id_79dca31d8297faf1() { return logError(function (arg0, arg1) {\n    var ret = getObject(arg1).id;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n}, arguments) };\n\nexport function __wbg_setid_73be37238eaa05be() { return logError(function (arg0, arg1, arg2) {\n    getObject(arg0).id = getStringFromWasm0(arg1, arg2);\n}, arguments) };\n\nexport function __wbg_scrollLeft_e8aba47a94d12290() { return logError(function (arg0) {\n    var ret = getObject(arg0).scrollLeft;\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_getBoundingClientRect_534c1b96b6e612d3() { return logError(function (arg0) {\n    var ret = getObject(arg0).getBoundingClientRect();\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_getElementsByClassName_8a7d00ed3eaf1522() { return logError(function (arg0, arg1, arg2) {\n    var ret = getObject(arg0).getElementsByClassName(getStringFromWasm0(arg1, arg2));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_length_41b205f6892bf9d9() { return logError(function (arg0) {\n    var ret = getObject(arg0).length;\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_get_bdec89fd60d07530() { return logError(function (arg0, arg1) {\n    var ret = getObject(arg0)[arg1 >>> 0];\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_dataTransfer_bc4c0501385a0c8e() { return logError(function (arg0) {\n    var ret = getObject(arg0).dataTransfer;\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_drawElementsInstancedANGLE_e184bb1bad14df88() { return logError(function (arg0, arg1, arg2, arg3, arg4, arg5) {\n    getObject(arg0).drawElementsInstancedANGLE(arg1 >>> 0, arg2, arg3 >>> 0, arg4, arg5);\n}, arguments) };\n\nexport function __wbg_vertexAttribDivisorANGLE_2dc41a79843a435c() { return logError(function (arg0, arg1, arg2) {\n    getObject(arg0).vertexAttribDivisorANGLE(arg1 >>> 0, arg2 >>> 0);\n}, arguments) };\n\nexport function __wbg_scrollTop_5ebd5c6591748d6e() { return logError(function (arg0) {\n    var ret = getObject(arg0).scrollTop;\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_hidden_f7a620ec4ab18ce5() { return logError(function (arg0) {\n    var ret = getObject(arg0).hidden;\n    _assertBoolean(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_sethidden_fdaefd7e7da7e4c0() { return logError(function (arg0, arg1) {\n    getObject(arg0).hidden = arg1 !== 0;\n}, arguments) };\n\nexport function __wbg_style_16f5dd9624687c8f() { return logError(function (arg0) {\n    var ret = getObject(arg0).style;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_offsetTop_45111254e7b26a1f() { return logError(function (arg0) {\n    var ret = getObject(arg0).offsetTop;\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_offsetLeft_be5393bf9eec5766() { return logError(function (arg0) {\n    var ret = getObject(arg0).offsetLeft;\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_offsetWidth_bc683e2f57ea2d6b() { return logError(function (arg0) {\n    var ret = getObject(arg0).offsetWidth;\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_setonload_9235de4503eb82c8() { return logError(function (arg0, arg1) {\n    getObject(arg0).onload = getObject(arg1);\n}, arguments) };\n\nexport function __wbg_setonerror_939f617c2b40758c() { return logError(function (arg0, arg1) {\n    getObject(arg0).onerror = getObject(arg1);\n}, arguments) };\n\nexport function __wbg_blur_2156876090506146() { return handleError(function (arg0) {\n    getObject(arg0).blur();\n}, arguments) };\n\nexport function __wbg_focus_4434360545ac99cf() { return handleError(function (arg0) {\n    getObject(arg0).focus();\n}, arguments) };\n\nexport function __wbg_responseURL_a3e549a88db1c1f7() { return logError(function (arg0, arg1) {\n    var ret = getObject(arg1).responseURL;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n}, arguments) };\n\nexport function __wbg_setresponseType_e5326d926ee8e787() { return logError(function (arg0, arg1) {\n    getObject(arg0).responseType = takeObject(arg1);\n}, arguments) };\n\nexport function __wbg_response_8b12ac238727ae0e() { return handleError(function (arg0) {\n    var ret = getObject(arg0).response;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_new_08dfde0f90155eb7() { return handleError(function () {\n    var ret = new XMLHttpRequest();\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_open_7190f43b39e7f488() { return handleError(function (arg0, arg1, arg2, arg3, arg4, arg5) {\n    getObject(arg0).open(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4), arg5 !== 0);\n}, arguments) };\n\nexport function __wbg_send_84c8dd943b775f78() { return handleError(function (arg0) {\n    getObject(arg0).send();\n}, arguments) };\n\nexport function __wbg_clientX_849ccdf456d662ac() { return logError(function (arg0) {\n    var ret = getObject(arg0).clientX;\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_clientY_1aaff30fe0cd0876() { return logError(function (arg0) {\n    var ret = getObject(arg0).clientY;\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_ctrlKey_4e536bedb069129f() { return logError(function (arg0) {\n    var ret = getObject(arg0).ctrlKey;\n    _assertBoolean(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_metaKey_0b396e35a4941247() { return logError(function (arg0) {\n    var ret = getObject(arg0).metaKey;\n    _assertBoolean(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_button_a18f33eb55774d89() { return logError(function (arg0) {\n    var ret = getObject(arg0).button;\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_instanceof_WebGlRenderingContext_2be4c068bf5f8362() { return logError(function (arg0) {\n    var ret = getObject(arg0) instanceof WebGLRenderingContext;\n    _assertBoolean(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_canvas_d0b58be124e596e3() { return logError(function (arg0) {\n    var ret = getObject(arg0).canvas;\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_bufferData_85d635f32a990208() { return logError(function (arg0, arg1, arg2, arg3) {\n    getObject(arg0).bufferData(arg1 >>> 0, getObject(arg2), arg3 >>> 0);\n}, arguments) };\n\nexport function __wbg_bufferSubData_3a944e1fdad0cd9a() { return logError(function (arg0, arg1, arg2, arg3) {\n    getObject(arg0).bufferSubData(arg1 >>> 0, arg2, getObject(arg3));\n}, arguments) };\n\nexport function __wbg_readPixels_3692eaca9dfc7c0c() { return handleError(function (arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n    getObject(arg0).readPixels(arg1, arg2, arg3, arg4, arg5 >>> 0, arg6 >>> 0, getObject(arg7));\n}, arguments) };\n\nexport function __wbg_texImage2D_d26bd916ff0956a1() { return handleError(function (arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10) {\n    getObject(arg0).texImage2D(arg1 >>> 0, arg2, arg3, arg4, arg5, arg6, arg7 >>> 0, arg8 >>> 0, arg9 === 0 ? undefined : getArrayU8FromWasm0(arg9, arg10));\n}, arguments) };\n\nexport function __wbg_texImage2D_b46a9b691e69d90b() { return handleError(function (arg0, arg1, arg2, arg3, arg4, arg5, arg6) {\n    getObject(arg0).texImage2D(arg1 >>> 0, arg2, arg3, arg4 >>> 0, arg5 >>> 0, getObject(arg6));\n}, arguments) };\n\nexport function __wbg_texSubImage2D_d907a4c940fd6e41() { return handleError(function (arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {\n    getObject(arg0).texSubImage2D(arg1 >>> 0, arg2, arg3, arg4, arg5, arg6, arg7 >>> 0, arg8 >>> 0, getObject(arg9));\n}, arguments) };\n\nexport function __wbg_texSubImage2D_d9dc0ffd91998f0d() { return handleError(function (arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n    getObject(arg0).texSubImage2D(arg1 >>> 0, arg2, arg3, arg4, arg5 >>> 0, arg6 >>> 0, getObject(arg7));\n}, arguments) };\n\nexport function __wbg_uniform1fv_e6a2134edff4f2e9() { return logError(function (arg0, arg1, arg2, arg3) {\n    getObject(arg0).uniform1fv(getObject(arg1), getArrayF32FromWasm0(arg2, arg3));\n}, arguments) };\n\nexport function __wbg_uniformMatrix2fv_aaa4e0f7c15bca04() { return logError(function (arg0, arg1, arg2, arg3, arg4) {\n    getObject(arg0).uniformMatrix2fv(getObject(arg1), arg2 !== 0, getArrayF32FromWasm0(arg3, arg4));\n}, arguments) };\n\nexport function __wbg_uniformMatrix4fv_f07c6caf5a563616() { return logError(function (arg0, arg1, arg2, arg3, arg4) {\n    getObject(arg0).uniformMatrix4fv(getObject(arg1), arg2 !== 0, getArrayF32FromWasm0(arg3, arg4));\n}, arguments) };\n\nexport function __wbg_activeTexture_74ed11a5c5d5af90() { return logError(function (arg0, arg1) {\n    getObject(arg0).activeTexture(arg1 >>> 0);\n}, arguments) };\n\nexport function __wbg_attachShader_55dbe770f3ee32ca() { return logError(function (arg0, arg1, arg2) {\n    getObject(arg0).attachShader(getObject(arg1), getObject(arg2));\n}, arguments) };\n\nexport function __wbg_bindBuffer_29d52e7bc48650c3() { return logError(function (arg0, arg1, arg2) {\n    getObject(arg0).bindBuffer(arg1 >>> 0, getObject(arg2));\n}, arguments) };\n\nexport function __wbg_bindFramebuffer_bd35ddd23765c7b6() { return logError(function (arg0, arg1, arg2) {\n    getObject(arg0).bindFramebuffer(arg1 >>> 0, getObject(arg2));\n}, arguments) };\n\nexport function __wbg_bindTexture_198c816345baca83() { return logError(function (arg0, arg1, arg2) {\n    getObject(arg0).bindTexture(arg1 >>> 0, getObject(arg2));\n}, arguments) };\n\nexport function __wbg_blendEquation_09d56f3be6f914f5() { return logError(function (arg0, arg1) {\n    getObject(arg0).blendEquation(arg1 >>> 0);\n}, arguments) };\n\nexport function __wbg_blendFunc_c8f1e0fb4467f57c() { return logError(function (arg0, arg1, arg2) {\n    getObject(arg0).blendFunc(arg1 >>> 0, arg2 >>> 0);\n}, arguments) };\n\nexport function __wbg_blendFuncSeparate_494b1dae028cb9a9() { return logError(function (arg0, arg1, arg2, arg3, arg4) {\n    getObject(arg0).blendFuncSeparate(arg1 >>> 0, arg2 >>> 0, arg3 >>> 0, arg4 >>> 0);\n}, arguments) };\n\nexport function __wbg_clear_2af1271959ec83d7() { return logError(function (arg0, arg1) {\n    getObject(arg0).clear(arg1 >>> 0);\n}, arguments) };\n\nexport function __wbg_clearColor_51c4f69c743c3252() { return logError(function (arg0, arg1, arg2, arg3, arg4) {\n    getObject(arg0).clearColor(arg1, arg2, arg3, arg4);\n}, arguments) };\n\nexport function __wbg_compileShader_3b5f9ef4c67a0777() { return logError(function (arg0, arg1) {\n    getObject(arg0).compileShader(getObject(arg1));\n}, arguments) };\n\nexport function __wbg_createBuffer_c40f37e1348bb91f() { return logError(function (arg0) {\n    var ret = getObject(arg0).createBuffer();\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_createFramebuffer_410b12a5cc5a8f13() { return logError(function (arg0) {\n    var ret = getObject(arg0).createFramebuffer();\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_createProgram_245520da1fb9e47b() { return logError(function (arg0) {\n    var ret = getObject(arg0).createProgram();\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_createShader_4d8818a13cb825b3() { return logError(function (arg0, arg1) {\n    var ret = getObject(arg0).createShader(arg1 >>> 0);\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_createTexture_f3a6a715d6bada45() { return logError(function (arg0) {\n    var ret = getObject(arg0).createTexture();\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_cullFace_c6fb8a7309c36a38() { return logError(function (arg0, arg1) {\n    getObject(arg0).cullFace(arg1 >>> 0);\n}, arguments) };\n\nexport function __wbg_deleteBuffer_c708688b9e1b3518() { return logError(function (arg0, arg1) {\n    getObject(arg0).deleteBuffer(getObject(arg1));\n}, arguments) };\n\nexport function __wbg_deleteFramebuffer_ca006f8649d4550a() { return logError(function (arg0, arg1) {\n    getObject(arg0).deleteFramebuffer(getObject(arg1));\n}, arguments) };\n\nexport function __wbg_deleteTexture_9159fb5927ed32c0() { return logError(function (arg0, arg1) {\n    getObject(arg0).deleteTexture(getObject(arg1));\n}, arguments) };\n\nexport function __wbg_disable_2b63b75dc6c27537() { return logError(function (arg0, arg1) {\n    getObject(arg0).disable(arg1 >>> 0);\n}, arguments) };\n\nexport function __wbg_disableVertexAttribArray_aa8458b40dd08914() { return logError(function (arg0, arg1) {\n    getObject(arg0).disableVertexAttribArray(arg1 >>> 0);\n}, arguments) };\n\nexport function __wbg_drawArrays_22c88d644a33fd59() { return logError(function (arg0, arg1, arg2, arg3) {\n    getObject(arg0).drawArrays(arg1 >>> 0, arg2, arg3);\n}, arguments) };\n\nexport function __wbg_drawElements_6e26500a25ecf478() { return logError(function (arg0, arg1, arg2, arg3, arg4) {\n    getObject(arg0).drawElements(arg1 >>> 0, arg2, arg3 >>> 0, arg4);\n}, arguments) };\n\nexport function __wbg_enable_8f6dd779ccb8e1de() { return logError(function (arg0, arg1) {\n    getObject(arg0).enable(arg1 >>> 0);\n}, arguments) };\n\nexport function __wbg_enableVertexAttribArray_4ed5f91d0718bee1() { return logError(function (arg0, arg1) {\n    getObject(arg0).enableVertexAttribArray(arg1 >>> 0);\n}, arguments) };\n\nexport function __wbg_framebufferTexture2D_31643260e5b0b294() { return logError(function (arg0, arg1, arg2, arg3, arg4, arg5) {\n    getObject(arg0).framebufferTexture2D(arg1 >>> 0, arg2 >>> 0, arg3 >>> 0, getObject(arg4), arg5);\n}, arguments) };\n\nexport function __wbg_getActiveUniform_3851244f8fc5db53() { return logError(function (arg0, arg1, arg2) {\n    var ret = getObject(arg0).getActiveUniform(getObject(arg1), arg2 >>> 0);\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_getAttribLocation_da5df7094096113d() { return logError(function (arg0, arg1, arg2, arg3) {\n    var ret = getObject(arg0).getAttribLocation(getObject(arg1), getStringFromWasm0(arg2, arg3));\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_getExtension_c6ceee3244ee7f20() { return handleError(function (arg0, arg1, arg2) {\n    var ret = getObject(arg0).getExtension(getStringFromWasm0(arg1, arg2));\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_getProgramInfoLog_c253042b64e86027() { return logError(function (arg0, arg1, arg2) {\n    var ret = getObject(arg1).getProgramInfoLog(getObject(arg2));\n    var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n}, arguments) };\n\nexport function __wbg_getProgramParameter_4f698af0dda0a2d4() { return logError(function (arg0, arg1, arg2) {\n    var ret = getObject(arg0).getProgramParameter(getObject(arg1), arg2 >>> 0);\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_getShaderInfoLog_584794e3bcf1e19b() { return logError(function (arg0, arg1, arg2) {\n    var ret = getObject(arg1).getShaderInfoLog(getObject(arg2));\n    var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n}, arguments) };\n\nexport function __wbg_getShaderParameter_64b1ffe576e5fa25() { return logError(function (arg0, arg1, arg2) {\n    var ret = getObject(arg0).getShaderParameter(getObject(arg1), arg2 >>> 0);\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_getUniformLocation_703972f150a46500() { return logError(function (arg0, arg1, arg2, arg3) {\n    var ret = getObject(arg0).getUniformLocation(getObject(arg1), getStringFromWasm0(arg2, arg3));\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_linkProgram_5fdd57237c761833() { return logError(function (arg0, arg1) {\n    getObject(arg0).linkProgram(getObject(arg1));\n}, arguments) };\n\nexport function __wbg_scissor_fb094c7db856e2a7() { return logError(function (arg0, arg1, arg2, arg3, arg4) {\n    getObject(arg0).scissor(arg1, arg2, arg3, arg4);\n}, arguments) };\n\nexport function __wbg_shaderSource_173ab97288934a60() { return logError(function (arg0, arg1, arg2, arg3) {\n    getObject(arg0).shaderSource(getObject(arg1), getStringFromWasm0(arg2, arg3));\n}, arguments) };\n\nexport function __wbg_texParameteri_caec5468f2a850c3() { return logError(function (arg0, arg1, arg2, arg3) {\n    getObject(arg0).texParameteri(arg1 >>> 0, arg2 >>> 0, arg3);\n}, arguments) };\n\nexport function __wbg_uniform1f_258478814234cf9c() { return logError(function (arg0, arg1, arg2) {\n    getObject(arg0).uniform1f(getObject(arg1), arg2);\n}, arguments) };\n\nexport function __wbg_uniform1i_a0275676828a22b6() { return logError(function (arg0, arg1, arg2) {\n    getObject(arg0).uniform1i(getObject(arg1), arg2);\n}, arguments) };\n\nexport function __wbg_uniform2f_b0af46ba675f2c0d() { return logError(function (arg0, arg1, arg2, arg3) {\n    getObject(arg0).uniform2f(getObject(arg1), arg2, arg3);\n}, arguments) };\n\nexport function __wbg_uniform3f_65416973a351fbab() { return logError(function (arg0, arg1, arg2, arg3, arg4) {\n    getObject(arg0).uniform3f(getObject(arg1), arg2, arg3, arg4);\n}, arguments) };\n\nexport function __wbg_uniform4f_e5d0a91bf98b35ad() { return logError(function (arg0, arg1, arg2, arg3, arg4, arg5) {\n    getObject(arg0).uniform4f(getObject(arg1), arg2, arg3, arg4, arg5);\n}, arguments) };\n\nexport function __wbg_useProgram_d5898a40ebe88916() { return logError(function (arg0, arg1) {\n    getObject(arg0).useProgram(getObject(arg1));\n}, arguments) };\n\nexport function __wbg_vertexAttribPointer_0d097efa33e3f45f() { return logError(function (arg0, arg1, arg2, arg3, arg4, arg5, arg6) {\n    getObject(arg0).vertexAttribPointer(arg1 >>> 0, arg2, arg3 >>> 0, arg4 !== 0, arg5, arg6);\n}, arguments) };\n\nexport function __wbg_viewport_19577064127daf83() { return logError(function (arg0, arg1, arg2, arg3, arg4) {\n    getObject(arg0).viewport(arg1, arg2, arg3, arg4);\n}, arguments) };\n\nexport function __wbindgen_is_undefined(arg0) {\n    var ret = getObject(arg0) === undefined;\n    _assertBoolean(ret);\n    return ret;\n};\n\nexport function __wbg_buffer_5e74a88a1424a2e0() { return logError(function (arg0) {\n    var ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_get_f45dff51f52d7222() { return logError(function (arg0, arg1) {\n    var ret = getObject(arg0)[arg1 >>> 0];\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_length_7b60f47bde714631() { return logError(function (arg0) {\n    var ret = getObject(arg0).length;\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_newnoargs_f579424187aa1717() { return logError(function (arg0, arg1) {\n    var ret = new Function(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_call_89558c3e96703ca1() { return handleError(function (arg0, arg1) {\n    var ret = getObject(arg0).call(getObject(arg1));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_isArray_8480ed76e5369634() { return logError(function (arg0) {\n    var ret = Array.isArray(getObject(arg0));\n    _assertBoolean(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_resolve_4f8f547f26b30b27() { return logError(function (arg0) {\n    var ret = Promise.resolve(getObject(arg0));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_then_a6860c82b90816ca() { return logError(function (arg0, arg1) {\n    var ret = getObject(arg0).then(getObject(arg1));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_then_58a04e42527f52c6() { return logError(function (arg0, arg1, arg2) {\n    var ret = getObject(arg0).then(getObject(arg1), getObject(arg2));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_self_e23d74ae45fb17d1() { return handleError(function () {\n    var ret = self.self;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_window_b4be7f48b24ac56e() { return handleError(function () {\n    var ret = window.window;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_globalThis_d61b1f48a57191ae() { return handleError(function () {\n    var ret = globalThis.globalThis;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_global_e7669da72fd7f239() { return handleError(function () {\n    var ret = global.global;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_newwithbyteoffsetandlength_278ec7532799393a() { return logError(function (arg0, arg1, arg2) {\n    var ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_new_e3b800e570795b3c() { return logError(function (arg0) {\n    var ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_set_5b8081e9d002f0df() { return logError(function (arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n}, arguments) };\n\nexport function __wbg_length_30803400a8f15c59() { return logError(function (arg0) {\n    var ret = getObject(arg0).length;\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_newwithbyteoffsetandlength_bdb885cfc5e9bc43() { return logError(function (arg0, arg1, arg2) {\n    var ret = new Uint16Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_newwithbyteoffsetandlength_ad2916c6fa7d4c6f() { return logError(function (arg0, arg1, arg2) {\n    var ret = new Float32Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_new_f5438c0cea22a3aa() { return logError(function (arg0) {\n    var ret = new Float32Array(getObject(arg0));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_set_7cb6639737aebb39() { return logError(function (arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n}, arguments) };\n\nexport function __wbg_length_44449d3b5928d07c() { return logError(function (arg0) {\n    var ret = getObject(arg0).length;\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nexport function __wbg_newwithlength_5f4ce114a24dfe1e() { return logError(function (arg0) {\n    var ret = new Uint8Array(arg0 >>> 0);\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_newwithlength_747b31c525d823ec() { return logError(function (arg0) {\n    var ret = new Float32Array(arg0 >>> 0);\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_subarray_e729e242fb317565() { return logError(function (arg0, arg1, arg2) {\n    var ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_parse_e3e7e590474b89d2() { return handleError(function (arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_new_59cb74e423758ede() { return logError(function () {\n    var ret = new Error();\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_stack_558ba5917b466edd() { return logError(function (arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n}, arguments) };\n\nexport function __wbg_error_4bb6c2a97407129a() { return logError(function (arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n}, arguments) };\n\nexport function __wbindgen_debug_string(arg0, arg1) {\n    var ret = debugString(getObject(arg1));\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport function __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nexport function __wbindgen_memory() {\n    var ret = wasm.memory;\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_closure_wrapper1458() { return logError(function (arg0, arg1, arg2) {\n    var ret = makeMutClosure(arg0, arg1, 235, __wbg_adapter_26);\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbindgen_closure_wrapper1460() { return logError(function (arg0, arg1, arg2) {\n    var ret = makeClosure(arg0, arg1, 232, __wbg_adapter_29);\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbindgen_closure_wrapper2297() { return logError(function (arg0, arg1, arg2) {\n    var ret = makeMutClosure(arg0, arg1, 476, __wbg_adapter_32);\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbindgen_closure_wrapper2298() { return logError(function (arg0, arg1, arg2) {\n    var ret = makeMutClosure(arg0, arg1, 490, __wbg_adapter_35);\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbindgen_closure_wrapper2300() { return logError(function (arg0, arg1, arg2) {\n    var ret = makeMutClosure(arg0, arg1, 480, __wbg_adapter_38);\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbindgen_closure_wrapper2302() { return logError(function (arg0, arg1, arg2) {\n    var ret = makeMutClosure(arg0, arg1, 482, __wbg_adapter_41);\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbindgen_closure_wrapper2304() { return logError(function (arg0, arg1, arg2) {\n    var ret = makeMutClosure(arg0, arg1, 484, __wbg_adapter_44);\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbindgen_closure_wrapper2306() { return logError(function (arg0, arg1, arg2) {\n    var ret = makeMutClosure(arg0, arg1, 486, __wbg_adapter_47);\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbindgen_closure_wrapper2308() { return logError(function (arg0, arg1, arg2) {\n    var ret = makeMutClosure(arg0, arg1, 488, __wbg_adapter_50);\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbindgen_closure_wrapper2310() { return logError(function (arg0, arg1, arg2) {\n    var ret = makeMutClosure(arg0, arg1, 492, __wbg_adapter_53);\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbindgen_closure_wrapper2313() { return logError(function (arg0, arg1, arg2) {\n    var ret = makeMutClosure(arg0, arg1, 478, __wbg_adapter_56);\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbindgen_closure_wrapper2456() { return logError(function (arg0, arg1, arg2) {\n    var ret = makeMutClosure(arg0, arg1, 502, __wbg_adapter_59);\n    return addHeapObject(ret);\n}, arguments) };\n\n","\nimport { HiPSDefinition } from \"../../../../../js/HiPSDefinition.js\";\nimport { HpxImageSurvey } from \"../../../../../js/HpxImageSurvey.js\";\nimport { Utils } from \"../../../../../js/Utils.js\";\n\nexport async function fetchSurveyMetadata(rootURL) {\n    // Use the url for retrieving the HiPS properties\n    // remove final slash\n    if (rootURL.slice(-1) === '/') {\n        rootURL = rootURL.substr(0, rootURL.length-1);\n    }\n\n    // make URL absolute\n    rootURL = Utils.getAbsoluteURL(rootURL);\n\n    // fast fix for HTTPS support --> will work for all HiPS served by CDS\n    if (Utils.isHttpsContext() && ( /u-strasbg.fr/i.test(rootURL) || /unistra.fr/i.test(rootURL)  ) ) {\n        rootURL = rootURL.replace('http://', 'https://');\n    }\n\n    const url = rootURL + '/properties';\n    console.log(\"properties url\", url);\n    let metadata = await fetch(url)\n        .then((response) => response.text());\n    // We get the property here\n    metadata = HiPSDefinition.parseHiPSProperties(metadata);\n\n    // 1. Ensure there is exactly one survey matching\n    if (!metadata) {\n        throw 'no surveys matching';\n    }\n    console.log(metadata)\n    return metadata;\n}\n"],"names":[],"sourceRoot":""}